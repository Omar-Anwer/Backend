spring.application.name=critter_chronologer

# Server port is arbitrary
server.port=8082

# Data Source Setup

# Database (mysql)
# The url property uses the format:
# subprotocol : serverName[:port] / databaseInstanceName : properties
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/critter
spring.datasource.username=sa
spring.datasource.password=sa1234

# Datasource (Hikari)
com.udacity.datasource.username=sa
com.udacity.datasource.password=sa1234

# uncomment the below lines to view sql output in console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Set the initialization-mode property to ‘always’ so that it continues to operate in both embedded H2 DB and external mysql DB, other [always|embedded|never]
spring.datasource.initialization-mode=always
#disable hibernate initialization if you use scripts (data.sq or schema.sql) to avoid conflicts, other [none|create|create-drop|drop]
spring.jpa.hibernate.ddl-auto=create


# Spring Dev Tools Configurations
spring.devtools.remote.restart.enabled=true



# in mysql
# CREATE SCHEMA `critter` ; -- Create the critter database

# CREATE USER 'sa'@'localhost' IDENTIFIED BY 'sa1234'; -- Create the user if you haven’t yet
# GRANT ALL ON critter.* TO 'sa'@'localhost'; -- Gives all privileges to the new user on critter


