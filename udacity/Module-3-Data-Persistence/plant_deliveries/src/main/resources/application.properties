
spring.application.name=shop

# port application
server.port=8080

# Spring Dev Tools Configurations
spring.devtools.remote.restart.enabled=true

# Database (H2)
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:shop
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2

# Database (mysql)
# The url property uses the format:
# subprotocol : serverName[:port] / databaseInstanceName : properties
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/plant
# Set the initialization-mode property to ‘always’ so that it continues to operate in both embedded H2 DB and external mysql DB, other [always|embedded|never]
spring.datasource.initialization-mode=always
spring.datasource.username=sa
spring.datasource.password=sa1234
#The below property will cause Spring to try and execute schema-foo.sql and data-foo.sql
#spring.datasource.platform=foo

# JPA
# prints all hibernate-generated sql commands to console
spring.jpa.show-sql=true
# formats the sql output and makes it easier to read
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# Drop all tables for defined Entities, then create them.
#disable hibernate initialization if you use scripts (data.sq or schema.sql) to avoid conflicts, other [none|create|create-drop|drop]
spring.jpa.hibernate.ddl-auto=create

# Datasource (Hikari)
com.udacity.datasource.username=sa
com.udacity.datasource.password=sa1234

#in mysql
# CREATE SCHEMA `plant` ; -- Create the plant database

# CREATE USER 'sa'@'localhost' IDENTIFIED BY 'sa1234'; -- Create the user if you haven’t yet
# GRANT ALL ON plant.* TO 'sa'@'localhost'; -- Gives all privileges to the new user on plant


